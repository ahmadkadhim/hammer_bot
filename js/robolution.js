// Generated by CoffeeScript 1.6.3
(function() {
  $(document).ready(function() {
    var AjaxRequest, Controller, MusicPlayer, drawClown, human, keyMap, moonwalk, robotDance, server;
    $("#youtube").hide();
    $(".canvas-frame").hide();
    $("#controls").addClass("button-choice");
    keyMap = {
      37: {
        direction: {
          strafe: +1
        },
        id: "left"
      },
      38: {
        direction: {
          forward: +1
        },
        id: "up"
      },
      39: {
        direction: {
          strafe: -1
        },
        id: "right"
      },
      40: {
        direction: {
          forward: -1
        },
        id: "down"
      }
    };
    Controller = (function() {
      function Controller() {}

      $(document).keydown(function(e) {
        var direction, pressed;
        pressed = keyMap[e.keyCode];
        direction = {};
        $("#" + keyMap[e.keyCode].id).addClass("selected");
        return server.get(keyMap[e.keyCode].direction);
      });

      $(document).keyup(function(e) {
        return $("#" + keyMap[e.keyCode].id).removeClass("selected");
      });

      return Controller;

    })();
    AjaxRequest = (function() {
      function AjaxRequest() {}

      AjaxRequest.prototype.get = function(input) {
        return $.ajax("http://127.0.0.1:8071/motion-control/update", {
          data: input,
          dataType: "jsonp"
        });
      };

      return AjaxRequest;

    })();
    $("#moonwalk").click(function() {
      var bigtop;
      $(".button").removeClass("button-choice");
      $(this).addClass("button-choice");
      $(".controller").fadeOut(400);
      $(".canvas-frame").fadeIn(400);
      drawClown();
      bigtop = new MusicPlayer;
      bigtop.startPlaying();
      return moonwalk.start(2000);
    });
    $("#controls").click(function() {
      $(".button").removeClass("button-choice");
      $(this).addClass("button-choice");
      $(".canvas-frame").fadeOut(400);
      return $(".controller").fadeIn(400);
    });
    robotDance = (function() {
      var moves;

      function robotDance() {}

      moves = [37, 38, 39, 40, 65, 68, 0];

      robotDance.prototype.start = function(duration) {
        var keep_dancing, start_time;
        start_time = Date.now();
        return keep_dancing = setInterval(function() {
          var current_move, now_time;
          now_time = Date.now();
          current_move = moves[Math.floor(Math.random() * moves.length)];
          if (start_time + duration <= now_time) {
            clearInterval(keep_dancing);
          }
          return server.get(keyMap[current_move].direction);
        }, 1000);
      };

      return robotDance;

    })();
    drawClown = function() {
      var canvas, clown, clown_loc, ctx;
      canvas = document.getElementById('canvas');
      ctx = canvas.getContext("2d");
      ctx.font = "bold 80pt Calibri";
      ctx.fillText("Clown", 130, 130);
      ctx.fillText("Dance!", 120, 250);
      clown_loc = {
        source: "../hammer_bot/assets/spritesheet.png",
        torso: {
          width: 100,
          height: 105,
          position: {
            x: 415,
            y: 45
          }
        },
        head: {
          width: 122,
          height: 184,
          position: {
            x: 32,
            y: 200
          }
        },
        r_arm: {
          width: 128,
          height: 110,
          position: {
            x: 184,
            y: 58
          }
        },
        l_arm: {
          width: 170,
          height: 74,
          position: {
            x: 35,
            y: 46
          }
        }
      };
      clown = new Image();
      clown.src = clown_loc.source;
      return clown.onload = function() {
        var angle, creepyAnimate, r_wave;
        angle = 0;
        r_wave = 0;
        creepyAnimate = function() {
          return setInterval(function() {
            var center_x, center_y, l_arm_x, l_arm_y, r_arm_x, r_arm_y, to_rad, torso_x, torso_y;
            center_x = 300;
            center_y = 200;
            torso_x = 210;
            torso_y = 110;
            r_arm_x = torso_x + 30;
            r_arm_y = torso_y - 15;
            l_arm_x = torso_x - 80;
            l_arm_y = torso_y - 4;
            to_rad = Math.PI / 180;
            canvas.width = canvas.width;
            ctx.drawImage(clown, clown_loc.torso.position.x, clown_loc.torso.position.y, clown_loc.torso.width, clown_loc.torso.height, torso_x, torso_y, clown_loc.torso.width, clown_loc.torso.height);
            ctx.drawImage(clown, clown_loc.r_arm.position.x, clown_loc.r_arm.position.y, clown_loc.r_arm.width, clown_loc.r_arm.height, r_arm_x, r_arm_y, clown_loc.r_arm.width, clown_loc.r_arm.height);
            ctx.drawImage(clown, clown_loc.l_arm.position.x, clown_loc.l_arm.position.y, clown_loc.l_arm.width, clown_loc.l_arm.height, l_arm_x, l_arm_y, clown_loc.l_arm.width, clown_loc.l_arm.height);
            ctx.save();
            ctx.translate(265, 105);
            ctx.rotate(angle * to_rad);
            ctx.drawImage(clown, clown_loc.head.position.x, clown_loc.head.position.y, clown_loc.head.width, clown_loc.head.height, -75, -85, clown_loc.head.width, clown_loc.head.height);
            ctx.translate(-265, -105);
            ctx.restore();
            return angle += 1;
          }, 50);
        };
        return setTimeout(function() {
          $("#canvas").css("background-color", "red");
          return creepyAnimate();
        }, 5000);
      };
    };
    MusicPlayer = (function() {
      function MusicPlayer() {
        var firstScriptTag, tag;
        tag = document.createElement('script');
        tag.src = "https://www.youtube.com/iframe_api";
        tag.setAttribute("id", "youtube_api");
        firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
      }

      MusicPlayer.prototype.startPlaying = function() {
        var firstScriptTag, song;
        song = document.createElement('script');
        song.src = "js/youtube.js";
        song.setAttribute("id", "music_player");
        firstScriptTag = document.getElementsByTagName('script')[1];
        return firstScriptTag.parentNode.insertBefore(song, firstScriptTag);
      };

      return MusicPlayer;

    })();
    moonwalk = new robotDance;
    human = new Controller;
    return server = new AjaxRequest;
  });

}).call(this);

/*
//@ sourceMappingURL=robolution.map
*/
